name: watchdog

on:
  issue_comment:
    types: [created]

jobs:
  pre-woof:
    runs-on: ubuntu-22.04
    if: >
      github.event_name == 'issue_comment' &&
      github.event.issue.pull_request &&
      startsWith(github.event.comment.body, '/ci') &&
      contains('ko3n1g,nouiz,joker-eph,yhtang,terrykong,hemildesai,chaserileyroberts,CliveUnger,DwarKapex,mingxu1067,kocchop,SahilJain314,ashors1,maanug-nv,hmonishN,gspschmid', format('{0},', github.actor))
    outputs:
      message: ${{ steps.state.outputs.message }}
      test_subset: ${{ steps.state.outputs.test_subset }}
    steps:
      - name: Check out the repository under ${GITHUB_WORKSPACE}
        uses: actions/checkout@v4

      - name: Verify state
        shell: bash
        id: state
        run: |
          test_subset=$(echo "${{ github.event.comment.body }}" | cut -d' ' -f2-)
          valid_test_subsets=$(yq '.on.workflow_dispatch.inputs.TEST_SUBSET.options | join(",")'  .github/workflows/ci.yaml)

          if [[ " $valid_test_subsets " != *" $test_subset "* ]]; then
            message="Invalid value for \`\/ci \$TEST_SUBSET\` provided. Expected one of: ($valid_test_subsets), Actual: $test_subset"
            echo "message=$message" >> "$GITHUB_OUTPUT"
            exit 1
          fi

          echo "test_subset=$test_subset" >> "$GITHUB_OUTPUT"

  woof:
    runs-on: ubuntu-22.04
    needs: pre-woof 
    outputs:
      message: ${{ steps.result.outputs.message }}
    steps:
      - name: Get PR number
        shell: bash
        id: get-pr-num
        run: |
          PR_URL="${{ github.event.issue.pull_request.url }}"
          PR_NUM=${PR_URL##*/}
          echo "pr_number=$PR_NUM" >> $GITHUB_OUTPUT

      - name: Get Pull Request Information
        uses: actions/github-script@v6
        id: get-pr-branch
        with:
          result-encoding: string
          script: |
            const pr = await github.rest.pulls.get({
              owner: context.repo.owner,
              repo: context.repo.repo,
              pull_number: ${{ steps.get-pr-num.outputs.pr_number }}
            });
            console.log('Pull Request Information:', pr.data);
            return pr.data.head.ref;

      - name: Trigger `CI` workflow on subset of tests          
        uses: aurelien-baudet/workflow-dispatch@v2.1.1
        id: trigger
        with:
          workflow: "CI"
          token: ${{ secrets.GITHUB_TOKEN }}
          wait-for-completion: false
          ref: ${{ steps.get-pr-branch.outputs.result }}
          inputs: '{ "TEST_SUBSET": "${{ needs.pre-woof.outputs.test_subset }}" }'
      
      - name: Create result message
        shell: bash
        id: result
        run: |
          message="presubmit CI was automatically triggered. Click [here](${{ steps.trigger.outputs.workflow-url }}) to navigate to the workflow run."

          echo "message=$message" >> "$GITHUB_OUTPUT"

  post-woof:
    runs-on: ubuntu-22.04
    if: always()
    needs: [pre-woof, woof]
    steps:
      - name: Fetch message
        shell: bash
        id: message
        run: |
          message="Watchdog ðŸ¤–: ${{ needs.pre-woof.outputs.message || needs.woof.outputs.message }}"
          echo "message=$message" >> "$GITHUB_OUTPUT"

      - name: Update `GITHUB_STEP_SUMMARY`
        shell: bash
        run: echo "${{ steps.message.outputs.message }}" >> $GITHUB_STEP_SUMMARY

      - name: Update PR issue comment
        shell: bash
        run: |
          # Current message that may contain a woof-response
          message="${{ github.event.comment.body}}"

          # Remove old woof-response
          message=$(awk -F '<woof>' '{print $1}' <<< "$message")

          # Add new woof-response
          message="$message<woof>
          <woof>
          ---

          ${{ steps.message.outputs.message }}
          </woof>
          "
          
          # GitHub needs HTML tags instead of newline chars
          message="${message//$'\n'/<br>}"

          # Fire
          curl -L \
            -X PATCH \
            -H "Accept: application/vnd.github+json" \
            -H "Authorization: Bearer ${{ secrets.GITHUB_TOKEN }}" \
            -H "X-GitHub-Api-Version: 2022-11-28" \
            https://api.github.com/repos/${{ github.repository }}/issues/comments/${{ github.event.comment.id }} \
            -d '{"body":"'"$message"'"}'